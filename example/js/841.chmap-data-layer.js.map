{"version":3,"file":"841.chmap-data-layer.js","mappings":"qMAGQA,EAAcC,EAAAA,cAAAA,UAEhBC,EAAoB,IAAIC,EAAAA,QAAAA,kBAE1BC,EAAQ,KAERC,EAAY,KAEhB,SAASC,EAAiBC,EAAKC,EAAOC,EAAIC,GACtCR,EAAkBS,GAAGJ,EAAKC,EAAOC,EAAIC,GAiEzC,SAASE,EAAKC,GA9Dd,IAEUC,EA8DFV,KA9DEU,EAAMC,SAASC,cAAc,QAkB/BC,UAhBM,shBAkBVF,SAASG,KAAKC,OAAOL,GAMzB,SAA+BA,GAE3BT,EAAYS,EAAIM,cAAc,mBAE9B,IAAMC,EAAcP,EAAIQ,WAExBlB,EAAQ,IAAIJ,EAAUqB,GAMtBA,EAAaf,iBAAiB,uBAAuB,WACjDJ,EAAkBqB,KAAK,SAAUF,MAjBrCG,CAAsBV,IA4CtBT,EAAUY,UAAYJ,EAtB1B,WAEI,IAAMY,EAAUpB,EAAUe,cAAc,2BAExC,GAAGK,EAAQ,CAEP,IAAMC,EAAOC,WAAWF,EAAQG,aAAa,cAE7CH,EAAQI,QAAU,SAACC,GACfA,EAAEC,iBACF7B,EAAkBqB,KAAK,mBAAoBG,KAcnDM,GAEA5B,EAAMQ,OAENV,EAAkBqB,KAAK,QAASnB,EAAM6B","sources":["webpack://chmapDataLayer/./src/js/floating-panel/metadata-panel.js"],"sourcesContent":["\nimport { Commons, BootstrapWrap } from '@chmap/utilities';\n\nconst { Offcanvas } = BootstrapWrap;\n\nconst localEventEmitter = new Commons.EventEmitterClass();\n\nlet panel = null;\n\nlet panelBody = null;\n\nfunction addEventListener(obj, types, fn, context){\n    localEventEmitter.on(obj, types, fn, context);\n}\n\nfunction createUI(){\n\n    const div = document.createElement('div');\n\n    const html =\n`<div \n     id=\"data-layer-metadata-panel\"\n     class=\"offcanvas offcanvas-end\"\n     style=\"width:40%;\"\n     data-bs-scroll=\"true\"\n     data-bs-backdrop=\"false\"\n     tabindex=\"-1\"\n     aria-labelledby=\"offcanvasScrollingLabel\">\n    <div class=\"offcanvas-header pb-0\">\n        <h5 class=\"offcanvas-title\">Metadata</h5>\n        <i class=\"bi bi-chevron-right btn-outline-success px-1\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\" ></i>\n    </div>\n    <div class=\"offcanvas-body\" style=\"padding-top:0.5rem;\"></div>\n</div>`;\n\n    div.innerHTML = html;\n\n    document.body.append(div);\n\n    bindPointersAndEvents(div);\n\n}\n\nfunction bindPointersAndEvents(div) {\n\n    panelBody = div.querySelector('.offcanvas-body');\n\n    const offCanvasDom= div.firstChild;\n\n    panel = new Offcanvas(offCanvasDom);\n\n    // offCanvasDom.addEventListener('shown.bs.offcanvas', () => {\n    //     localEventEmitter.emit('shown', offCanvasDom);\n    // });\n\n    offCanvasDom.addEventListener('hidden.bs.offcanvas', () => {\n        localEventEmitter.emit('hidden', offCanvasDom);\n    });\n\n}\n\nfunction bindShowYearMetadata(){\n\n    const hypLink = panelBody.querySelector('.show-year-metadata-btn');\n\n    if(hypLink){\n\n        const year = parseFloat(hypLink.getAttribute('data-year'));\n\n        hypLink.onclick = (e) => {\n            e.preventDefault();\n            localEventEmitter.emit('showYearMetadata', year);\n        }\n    }\n\n}\n\nfunction show(info){\n\n    if(!panel){\n        createUI();\n    }\n\n    panelBody.innerHTML = info;\n\n    bindShowYearMetadata();\n\n    panel.show();\n\n    localEventEmitter.emit('shown', panel._element);\n}\n\nexport {\n    show,\n    addEventListener as on,\n}\n\n/* Events\n\n    { name: 'showYearMetadata', params: year-Number}\n    { name: 'shown', params: panelDom-Object }\n    { name: 'hidden', params: panelDom-Object }\n\n*/\n"],"names":["Offcanvas","BootstrapWrap","localEventEmitter","Commons","panel","panelBody","addEventListener","obj","types","fn","context","on","show","info","div","document","createElement","innerHTML","body","append","querySelector","offCanvasDom","firstChild","emit","bindPointersAndEvents","hypLink","year","parseFloat","getAttribute","onclick","e","preventDefault","bindShowYearMetadata","_element"],"sourceRoot":""}