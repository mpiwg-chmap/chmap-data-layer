{"version":3,"file":"chmap-utilities.js","mappings":"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aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,mBAAmB;AAC3C;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED,+DAAe,SAAS,EAAC;;;;;;;;;;;;ACnazB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,WAAW;AAC3D;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kCAAkC,YAAY;AAC9C,mCAAmC,YAAY;;AAE/C;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,CAAC;;AAED,+DAAe,oBAAoB,EAAC;;;;;;;;;;;;;AC9Da;;AAEjD;;AAEA;;AAEA,qBAAqB,sEAA2B;AAChD;;AAEA;AACA;AACA;;AAEA,CAAC;;AAED,+DAAe,UAAU,EAAC;;;;;;;;;;;;;;ACdc;;AAExC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,0CAA0C,SAAS,SAAS;;AAE5D;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kEAAkE,mBAAmB;;AAErF,sBAAsB,qEAAyB;;AAE/C;;AAEA,kCAAkC,eAAe;;AAEjD;;AAEA;AACA;AACA;;AAEA,CAAC;;AAED,+DAAe,YAAY,EAAC;;;;;;;;;;;;;AC3DqB;;AAEjD;;AAEA,kCAAkC,0DAAiB;;AAEnD;AACA;AACA;;AAEA,8BAA8B,yBAAyB;;AAEvD,uEAAuE,IAAI,OAAO,IAAI,+BAA+B,KAAK;;AAE1H;AACA,mEAAmE,qBAAqB;AACxF;AACA,gCAAgC,oDAAoD;AACpF;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,8BAA8B;;AAEtF;AACA,mEAAmE,qBAAqB;AACxF;AACA;;AAEA;;AAEA;;AAEA,8BAA8B;;AAE9B;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM;;AAEN;AACA,CAAC;;AAED,+DAAe,oBAAoB,EAAC;;;;;;;;;;;;;AC/EpC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,0CAA0C,kBAAkB,QAAQ,SAAS,WAAW,YAAY,aAAa;;AAEjH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED,+DAAe,OAAO,EAAC;;;;;;;;;;;AC5CvB;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgC;AACU;AACiB;AACpB;AACF;AACa;AACU;AACX;AACR;AACJ;;AAanC","sources":["webpack://chmapUtilities/webpack/universalModuleDefinition","webpack://chmapUtilities/./src/bootstrp-wrap.js","webpack://chmapUtilities/./src/commons.js","webpack://chmapUtilities/./src/constants.js","webpack://chmapUtilities/./src/data-processor/csv-processor.js","webpack://chmapUtilities/./src/data-processor/data-props-mapping.js","webpack://chmapUtilities/./src/data-processor/geo-json-processor.js","webpack://chmapUtilities/./src/data-processor/iiif-processor.js","webpack://chmapUtilities/./src/data-processor/index.js","webpack://chmapUtilities/./src/date-utils.js","webpack://chmapUtilities/./src/float-panel-management.js","webpack://chmapUtilities/./src/iiif-viewer.js","webpack://chmapUtilities/./src/notification.js","webpack://chmapUtilities/./src/openstreetmap-service.js","webpack://chmapUtilities/./src/spinner.js","webpack://chmapUtilities/external umd \"bootstrap\"","webpack://chmapUtilities/webpack/bootstrap","webpack://chmapUtilities/webpack/runtime/compat get default export","webpack://chmapUtilities/webpack/runtime/define property getters","webpack://chmapUtilities/webpack/runtime/hasOwnProperty shorthand","webpack://chmapUtilities/webpack/runtime/make namespace object","webpack://chmapUtilities/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bootstrap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"bootstrap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chmapUtilities\"] = factory(require(\"bootstrap\"));\n\telse\n\t\troot[\"chmapUtilities\"] = factory(root[\"bootstrap\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_bootstrap__) {\nreturn ","import { Toast, Offcanvas, Popover, Modal, Collapse } from 'bootstrap';\n\nexport { Toast, Offcanvas, Popover, Modal, Collapse };\n","\nclass EventEmitterClass {\n\n    constructor() {\n        this._events = {};\n    }\n\n    on(name, listener) {\n        if (!this._events[name]) {\n            this._events[name] = [];\n        }\n\n        this._events[name].push(listener);\n    }\n\n    removeListener(name, listenerToRemove) {\n\n        if (!this._events[name]) {\n            // throw new Error(`Can't remove a listener. Event \"${name}\" doesn't exits.`);\n            return;\n        }\n\n        const filterListeners = (listener) => listener !== listenerToRemove;\n\n        this._events[name] = this._events[name].filter(filterListeners);\n    }\n\n    emit(name, params) {\n\n        if (!this._events[name]) {\n            // throw new Error(`Can't emit an event. Event \"${name}\" doesn't exits.`);\n            return;\n        }\n\n        const fireCallbacks = (listener) => {\n            listener(params);\n        };\n\n        this._events[name].forEach(fireCallbacks);\n    }\n}\n\nconst SnowflakeID = function(){\n\n    let nowId = 0;\n\n    function next(){\n        return nowId++;\n    }\n\n    return {\n        next\n    }\n}();\n\n// const UUIDGenerator = function () {\n//\n//     function next(){\n//\n//         // Public Domain/MIT\n//         let d = new Date().getTime();\n//\n//         if ( typeof performance !== \"undefined\" && typeof performance.now === \"function\") {\n//             d += performance.now(); //use high-precision timer if available\n//         }\n//\n//         return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n//\n//             const r = (d + Math.random() * 16) % 16 | 0;\n//\n//             d = Math.floor(d / 16);\n//\n//             return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n//         });\n//     }\n//\n//     return {\n//         next,\n//     }\n//\n// }();\n\nconst YearMetadata = function(){\n\n    function query(year, callback, errorCallback){\n\n        const dateStr = year.toString() + \"-06-01\";\n\n        const isoString = (new Date(dateStr)).toISOString();\n\n        const url = `//authority.dila.edu.tw/webwidget/getAuthorityData.php?type=time&when=${isoString}&format=s`;\n\n        fetch(url)\n        .then(response => response.ok ? response : Promise.reject({err: response.status}))\n        .then(response => response.json())\n        .then(json => {\n\n            const root = json.W;\n\n            const html = [`<div class=\"mb-2\">${year + \"-06-01\"}</div>`];\n\n            for(const key in root) {\n\n                const parent = root[key];\n\n                html.push(`<div class=\"mb-2\"><span class=\"key\">${key}</span><div class=\"ps-4\">`);\n\n                for(const subKey in parent) {\n                    const value = parent[subKey];\n                    html.push(`<span class=\"fw-bolder\">${subKey}</span>: <span class=\"key\">${value}</span><br>`);\n                }\n\n                html.push(`</div></div>`);\n            }\n\n            html.push('<br/>Data provider: <a href=\"https://authority.dila.edu.tw/time/\" target=\"_blank\">DILA時間規範資料庫</a>');\n\n            callback(html.join(''));\n\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            errorCallback('Cannot access DILA時間規範資料庫 service, please contact administrators', 'warning')\n        });\n\n    }\n\n    return {\n        query,\n    }\n\n}();\n\nexport {\n    EventEmitterClass,\n    SnowflakeID,\n    // UUIDGenerator,\n    YearMetadata,\n}\n","\nString.prototype.interpolate = function(params) {\n    const names = Object.keys(params);\n    const values = Object.values(params);\n    return new Function(...names, `return \\`${this}\\`;`)(...values);\n}\n\nexport const GEO_REF_IMG_SIZE = 500;\n\nexport const POPUP_THUMBNAIL_WIDTH = 300;\n\nexport const PHOTO_ICON_SIZE = 55;\n\nexport const PUBLIC_MAP_API_URL = process.env.PUBLIC_MAP_API_URL;\n\nexport const IIIF_VIEWER_URL = process.env.IIIF_VIEWER_URL;\n\nexport const EXAMPLE_FILES_DIR = process.env.EXAMPLE_FILES_DIR;\n\n\n","import { mapCSVRequiredProps } from \"./data-props-mapping\";\n\nexport function process(text) {\n\n    const {headerArray, headerMap, data} = csv2JSON(text);\n\n    mapCSVRequiredProps(headerMap, data);\n\n    if (headerMap.ID !== undefined) {\n        data.sort((a, b) => parseInt(a.ID) - parseInt(b.ID));\n    }\n    if (headerMap.Page !== undefined) {\n        data.sort((a, b) => parseInt(b.Page) - parseInt(a.Page));\n    }\n\n    return {headerArray, headerMap, items: data};\n\n}\n\nfunction csv2Array(CSV_string, delimiter) {\n\n    delimiter = (delimiter || \",\"); // user-supplied delimeter or default comma\n\n    const pattern = new RegExp( // regular expression to parse the CSV values.\n    ( // Delimiters:\n    \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n    // Quoted fields.\n    \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n    // Standard fields.\n    \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"\n    ), \"gi\"\n    );\n\n    const rows = [[]];  // array to hold our data. First row is column headers.\n    // array to hold our individual pattern matching groups:\n    let matches = false; // false if we don't find any matches\n    // Loop until we no longer find a regular expression match\n    while (matches = pattern.exec(CSV_string)) {\n        const matched_delimiter = matches[1]; // Get the matched delimiter\n        // Check if the delimiter has a length (and is not the start of string)\n        // and if it matches field delimiter. If not, it is a row delimiter.\n        if (matched_delimiter.length && matched_delimiter !== delimiter) {\n            // Since this is a new row of data, add an empty row to the array.\n            rows.push([]);\n        }\n        let matched_value;\n        // Once we have eliminated the delimiter, check to see\n        // what kind of value was captured (quoted or unquoted):\n        if (matches[2]) { // found quoted value. unescape any double quotes.\n            matched_value = matches[2].replace(\n            new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\"\n            );\n        } else { // found a non-quoted value\n            matched_value = matches[3];\n        }\n        // Now that we have our value string, let's add\n        // it to the data array.\n        rows[rows.length - 1].push(matched_value);\n    }\n\n    return rows; // Return the parsed data Array\n\n}\n\nfunction csv2JSON(csvStr) {\n\n    const aryCSV = csv2Array(csvStr);\n\n    const headers = aryCSV[0], result = [], headerLen = headers.length;\n\n    const headerArray = [], headerMap = {};\n\n    let header, headerWOSpace;\n    for (let idx = 0; idx < headerLen; idx++) {\n\n        header = headers[idx];\n\n        headerWOSpace = headers[idx].replace(/\\s/g, '');\n\n        headers[idx] = headerWOSpace;\n\n        headerMap[headerWOSpace] = header;\n\n        headerArray.push(headerWOSpace)\n    }\n\n    let rec, currentline, val;\n\n    for (let idx = 1, len = aryCSV.length; idx < len; idx++) {\n\n        rec = {};\n\n        currentline = aryCSV[idx];\n\n        if (currentline.length < headerLen) continue;\n\n        for (let idx2 = 0; idx2 < headerLen; idx2++) {\n\n            val = currentline[idx2];\n\n            rec[headers[idx2]] = (val) ? val : '';\n        }\n\n        result.push(rec);\n\n    }\n\n    return {headerArray, headerMap, data: result};\n}\n","function mapCSVRequiredProps(headerMap, rows){\n\n    //TODO: Hard coding\n    const rules = [\n        {required: 'ID', alias: 'BookID'},\n        {required: 'name', alias: 'BookName'},\n        {required: 'date', alias: 'BookYear'},\n    ];\n\n    for(const rule of rules){\n        convert(headerMap, rule.required, rule.alias);\n    }\n\n    for(const row of rows){\n\n        mapRequiredProps(row, rules);\n\n    }\n\n}\n\nfunction mapGeoJSONRequiredProps(props){\n\n    //TODO: Hard coding\n    const rules = [\n        {required: 'ID', alias: 'OBSERVER_I'},\n        {required: 'name', alias: 'COMMON_NAM'},\n        {required: 'imageURL', alias: 'Pict'},\n        {required: 'date', alias: 'OBSERVAT_1'},\n        {required: 'ID', alias: '圖徵編號'},\n        {required: 'name', alias: '空間名稱'},\n        {required: 'imageURL', alias: '空間圖像'},\n        {required: 'date', alias: '建立時間'},\n    ];\n\n    mapRequiredProps(props, rules);\n\n}\n\nfunction mapRequiredProps(props, rules){\n\n    for(const rule of rules){\n\n        convert(props, rule.required, rule.alias);\n\n    }\n\n}\n\nfunction convert(props, requiredKey, aliasKey){\n\n    const required = props[requiredKey];\n    const alias = props[aliasKey];\n\n    if(!required && alias) {\n        props[requiredKey] = alias;\n    }\n\n}\n\nexport {\n    mapCSVRequiredProps,\n    mapGeoJSONRequiredProps,\n}\n","import { mapGeoJSONRequiredProps } from \"./data-props-mapping\";\nimport DateUtils from \"../date-utils\";\n\nexport function shouldIHandle(text) {\n    return text.indexOf(\"FeatureCollection\") >= 0;\n};\n\nexport function process(text) {\n\n    const json = JSON.parse(text);\n\n    const items = [];\n\n    for (let idx = 0, len = json.features.length; idx < len; idx++) {\n\n        const feature = json.features[idx];\n\n        const {properties, geometry} = feature;\n\n        mapGeoJSONRequiredProps(properties);\n\n        const {ID, name, imageURL, date} = properties;\n\n        const obj = {ID, name};\n\n        obj.imageURL = imageURL || \"#\";\n        obj.Longitude = geometry.coordinates[0] || 0;\n        obj.Latitude = geometry.coordinates[1] || 0;\n        obj.date = DateUtils.parse(date, \"yyyy/M/d t HH:mm:ss\");\n        obj.all = properties;\n\n        items.push(obj);\n\n    }\n\n    return {items, json};\n}\n","import {POPUP_THUMBNAIL_WIDTH} from \"../constants\";\n\nexport function shouldIHandle(text) {\n\n    return text.indexOf(\"http://iiif.io\") >= 0;\n\n};\n\nexport function process(text) {\n\n    const json = JSON.parse(text);\n\n    const manifestId = json['@id'];\n\n    const manifestLabel = json.label;\n\n    const canvases = json.sequences[0].canvases;\n\n    const items = [];\n\n    for (const canvas of canvases) {\n\n        const resource = canvas.images[0].resource;\n\n        const item = {\n            manifestId,\n            ID: canvas[\"@id\"],\n            name: canvas.label + \" \" + manifestLabel,\n            height: canvas?.height || 200,\n            width: canvas?.width || 200,\n            serviceID: resource.service[\"@id\"],\n        };\n\n        item.imageURL = item.ID;\n\n        item.bigImage = `${item.serviceID}/full/500,/0/default.jpg`;\n\n        if (canvas.thumbnail) {\n\n            const {height, width} = canvas.thumbnail;\n\n            item.thumbnail = canvas.thumbnail[\"@id\"];\n            item.thumbnailWidth = height;\n            item.thumbnailHeight = width;\n\n        } else {\n\n            item.thumbnail = `${item.serviceID}/full/${POPUP_THUMBNAIL_WIDTH},/0/default.jpg`;\n\n        }\n\n        if (canvas.metadata !== undefined) {\n\n            item.metadata = canvas.metadata;\n\n            const firstMeta = item.metadata[0];\n\n            item.Longitude = firstMeta.Longitude || 0;\n            item.Latitude = firstMeta.Latitude || 0;\n            item.Zoom = firstMeta.Zoom || 4;\n            item.date = makeDateProperty(firstMeta);\n\n        } else {\n\n            item.metadata = [{Latitude: 0, Longitude: 0, Zoom: 4}];\n\n            item.Latitude = 0;\n            item.Longitude = 0;\n            item.Zoom = 4;\n            item.date = makeDateProperty({});\n        }\n\n        items.push(item);\n\n    }\n\n    return {items, json};\n}\n\nfunction makeDateProperty(firstMeta){\n\n    const { label, value } = firstMeta;\n\n    let result;\n\n    if (label && label.toLowerCase() === 'date') {\n\n        if (value.length <= 4) {\n\n            const fixedYear = (\"0000\" + value).substr(value.length, 4);\n\n            result = new Date(parseInt(fixedYear), 5, 1);\n\n        } else {\n            //TODO: Hard coding\n            //Only deal with the two cases below:\n            // 1856-03-28\n            // 1746 ~ 1809\n            const regex = /(\\d*)(-|~)\\d*/g;\n            const found = regex.exec(value.replace(/\\s/g, \"\"));\n\n            result = new Date(parseInt(found[1]), 5, 1);\n        }\n\n    } else {\n\n        result = new Date(-99999, 0, 1);\n    }\n\n    return result;\n\n}\n\n","import DateUtils from \"../date-utils.js\";\nimport { process as processCSV } from \"./csv-processor\";\nimport { process as processGeoJson, shouldIHandle as isGeoJson } from \"./geo-json-processor\";\nimport { process as processIIIF, shouldIHandle as isIIIFFile } from \"./iiif-processor\";\n\nconst BasicDataProcessor = function() {\n\n    function execute(text, fileType) {\n\n        const {items, imgType, json} = processRawText(text, fileType);\n\n        const rows = [];\n\n        for (const item of items) {\n\n            //screen out the items which are without geo-coordinate.\n            if (item.Latitude !== undefined && item.Longitude !== undefined) {\n\n                rows.push(decorateDate(item));\n            }\n        }\n\n        return {rows, imgType, json};\n\n    }\n\n// extract required fields from rawText and convert each line into a json object.\n    function processRawText(text, fileType) {\n\n        let imgType = 'text';\n\n        let items = [];\n\n        let json = null;\n\n        if (fileType === 'geoJson' ||\n        fileType === 'unknown' && isGeoJson(text)) {\n\n            imgType = 'geoJson';\n\n            const result = processGeoJson(text);\n\n            items = result.items;\n\n            json = result.json;\n\n        } else if (fileType === 'iiif' || fileType === 'unknown' && isIIIFFile(text)) {\n\n            imgType = 'iiif';\n\n            const result = processIIIF(text);\n\n            items = result.items;\n\n            json = result.json;\n\n        } else {\n\n            const result = processCSV(text);\n\n            items = result.items;\n\n            imgType = (result.headerMap.imageURL !== undefined) ? 'normal' : 'text';\n\n        }\n\n        return {items, imgType, json};\n\n    }\n\n    function decorateDate(item) {\n\n        if (item.date) {\n\n            let ds = item.date.toString();\n\n            if (ds.length <= 4) {\n\n                const fixedYear = (\"0000\" + ds).substr(ds.length, 4);\n\n                item.date = new Date(fixedYear + \"-06-01T00:00:00Z\");\n\n            } else {\n\n                item.date = DateUtils.parse(item.date, \"yyyy/M/d t HH:mm:ss\");\n            }\n\n        } else {\n\n            item.date = new Date(-99999, 0, 1);\n        }\n\n        return item;\n\n    }\n\n    return {\n        execute,\n        isIIIFFile,\n    }\n}();\n\nexport default BasicDataProcessor;\n","/**\n * 日期格式化和解析\n * DateUtils提供format和parse进行日期转换。\n * format(date, pattern)把日期格式化成字符串。\n * 使用方法：\n * var date = new Date();\n * DateUtils.format(date, 'yyyy-MM-dd HH:mm:ss'); //2015-08-12 13:00:00\n *\n * parse(str, pattern)把字符串转成日期。\n * 使用方法：\n * var str = 2015-08-12 13:00:00;\n * DateUtils.format(str, 'yyyy-MM-dd HH:mm:ss');\n *\n * parse有两个参数，如果只传递str参数，会调用浏览器内置的Date.parse()方法进行转换。\n *\n *   格式       描述\n *   --------   ---------------------------------------------------------------\n *   yy         年份后两位，如2015取后两位是15。\n *   yyyy       年份四位。\n *   M          月份，取值1 ~ 12。\n *   MM         月份，取值01 ~ 12，如果月份为个位数，前面补0。\n *   MMM        月份缩写，如一月的英文缩写为Jan，中文缩写为一。\n *   MMMM       月份全称，如January、一月。\n *   d          日期在月中的第几天，取值1~31。\n *   dd         日期在月中的第几天，取值01~31，如果天数为个位数，前面补0。\n *   ddd        星期缩写，取值日、一、二、三、四、五、六。\n *   dddd       星期全称，取值星期日、星期一、星期二、星期三、星期四、星期五、星期六。\n *   H          24小时进制，取值0~23。\n *   HH         24小时进制，取值00~23，如果小时为个位数，前面补0。\n *   h          12小时进制，取值0~11。\n *   hh         12小时进制，取值00~11，如果小时为个位数，前面补0。\n *   m          分钟，取值0~59。\n *   mm         分钟，取值00~59，如果为个位数，前面补0。\n *   s          秒，取值0~59。\n *   ss         秒，取值00~59，如果为个位数，前面补0。\n *   S          毫秒，取值0~999。\n *   SS         毫秒，取值00~999，如果不足两位数，前面补0。\n *   SSS        毫秒，取值000~999，如果不足三位数，前面补0。\n *   t          上午、下午缩写。\n *   tt         上午、下午全称。\n *   --------   ---------------------------------------------------------------\n *\n * @author accountwcx@qq.com\n * @date   2015-08-12\n */\nconst DateUtils = (function() {\n    /*\n      const locale = {\n          dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          shortDayNames: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n          shortMonthNames: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          am: 'AM',\n          pm: 'PM',\n          shortAm: 'A',\n          shortPm: 'P'\n      };\n      */\n\n    const locale = {\n        dayNames: [\n            \"星期日\",\n            \"星期一\",\n            \"星期二\",\n            \"星期三\",\n            \"星期四\",\n            \"星期五\",\n            \"星期六\"\n        ],\n        shortDayNames: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\n        monthNames: [\n            \"一月\",\n            \"二月\",\n            \"三月\",\n            \"四月\",\n            \"五月\",\n            \"六月\",\n            \"七月\",\n            \"八月\",\n            \"九月\",\n            \"十月\",\n            \"十一月\",\n            \"十二月\"\n        ],\n        shortMonthNames: [\n            \"一\",\n            \"二\",\n            \"三\",\n            \"四\",\n            \"五\",\n            \"六\",\n            \"七\",\n            \"八\",\n            \"九\",\n            \"十\",\n            \"十一\",\n            \"十二\"\n        ],\n        am: \"上午\",\n        pm: \"下午\",\n        shortAm: \"上\",\n        shortPm: \"下\"\n    };\n\n    /**\n     * 左边补0\n     */\n    function leftPad(str, size) {\n        let result = \"\" + str;\n\n        while (result.length < size) {\n            result = \"0\" + result;\n        }\n\n        return result;\n    }\n\n    var parseToken = (function() {\n\n        const match2 = /\\d{2}/, // 00 - 99\n        //match3 = /\\d{3}/,          // 000 - 999\n        match4 = /\\d{4}/, // 0000 - 9999\n        match1to2 = /\\d{1,2}/, // 0 - 99\n        match1to3 = /\\d{1,3}/, // 0 - 999\n        //match1to4 = /\\d{1,4}/,     // 0 - 9999\n        match2w = /.{2}/, // 匹配两个字符\n        match1wto2w = /.{1,2}/, // 匹配1~2个字符\n        map = {\n            //年的后两位\n            yy: {\n                regex: match2,\n                name: \"year\"\n            },\n            //年\n            yyyy: {\n                regex: match4,\n                name: \"year\"\n            },\n            //两位数的月，不到两位数则补0\n            MM: {\n                regex: match2,\n                name: \"month\"\n            },\n            //月\n            M: {\n                regex: match1to2,\n                name: \"month\"\n            },\n            //两位数的日期，不到两位数则补0\n            dd: {\n                regex: match2,\n                name: \"date\"\n            },\n            //日期\n            d: {\n                regex: match1to2,\n                name: \"date\"\n            },\n            //两位数的小时，24小时进制\n            HH: {\n                regex: match2,\n                name: \"hours\"\n            },\n            //小时，24小时进制\n            H: {\n                regex: match1to2,\n                name: \"hours\"\n            },\n            //两位数的小时，12小时进制\n            hh: {\n                regex: match2,\n                name: \"hours\"\n            },\n            //小时，12小时进制\n            h: {\n                regex: match1to2,\n                name: \"hours\"\n            },\n            //两位数的分钟\n            mm: {\n                regex: match2,\n                name: \"minutes\"\n            },\n            //分钟\n            m: {\n                regex: match1to2,\n                name: \"minutes\"\n            },\n            s: {\n                regex: match1to2,\n                name: \"seconds\"\n            },\n            ss: {\n                regex: match2,\n                name: \"seconds\"\n            },\n            //上午、下午\n            tt: {\n                regex: match2w,\n                name: \"t\"\n            },\n            //上午、下午\n            t: {\n                regex: match1wto2w,\n                name: \"t\"\n            },\n            //毫秒\n            S: {\n                regex: match1to3,\n                name: \"millisecond\"\n            },\n            //毫秒\n            SS: {\n                regex: match1to3,\n                name: \"millisecond\"\n            },\n            //毫秒\n            SSS: {\n                regex: match1to3,\n                name: \"millisecond\"\n            }\n        };\n\n        return function(token, str, dateObj) {\n\n            let result;\n\n            const part = map[token];\n\n            if (part) {\n                result = str.match(part.regex);\n                if (result) {\n                    dateObj[part.name] = result[0];\n                    return result[0];\n                }\n            }\n\n            return null;\n        };\n    })();\n\n    return {\n        locale: locale,\n\n        format: function(val, pattern) {\n            if (Object.prototype.toString.call(val) !== \"[object Date]\") {\n                return \"\";\n            }\n\n            if (\n            Object.prototype.toString.call(pattern) !== \"[object String]\" ||\n            pattern === \"\"\n            ) {\n                pattern = \"yyyy-MM-dd HH:mm:ss\";\n            }\n\n            const fullYear = val.getFullYear(),\n            month = val.getMonth(),\n            day = val.getDay(),\n            date = val.getDate(),\n            hours = val.getHours(),\n            minutes = val.getMinutes(),\n            seconds = val.getSeconds(),\n            milliseconds = val.getMilliseconds();\n\n            return pattern.replace(\n            /(\\\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|SS?S?)/g,\n            function(m) {\n                if (m.charAt(0) === \"\\\\\") {\n                    return m.replace(\"\\\\\", \"\");\n                }\n\n                const locale = DateUtils.locale;\n\n                switch (m) {\n                    case \"hh\":\n                        return leftPad(\n                        hours < 13 ? (hours === 0 ? 12 : hours) : hours - 12,\n                        2\n                        );\n                    case \"h\":\n                        return hours < 13 ? (hours === 0 ? 12 : hours) : hours - 12;\n                    case \"HH\":\n                        return leftPad(hours, 2);\n                    case \"H\":\n                        return hours;\n                    case \"mm\":\n                        return leftPad(minutes, 2);\n                    case \"m\":\n                        return minutes;\n                    case \"ss\":\n                        return leftPad(seconds, 2);\n                    case \"s\":\n                        return seconds;\n                    case \"yyyy\":\n                        return fullYear;\n                    case \"yy\":\n                        return (fullYear + \"\").substring(2);\n                    case \"dddd\":\n                        return locale.dayNames[day];\n                    case \"ddd\":\n                        return locale.shortDayNames[day];\n                    case \"dd\":\n                        return leftPad(date, 2);\n                    case \"d\":\n                        return date;\n                    case \"MMMM\":\n                        return locale.monthNames[month];\n                    case \"MMM\":\n                        return locale.shortMonthNames[month];\n                    case \"MM\":\n                        return leftPad(month + 1, 2);\n                    case \"M\":\n                        return month + 1;\n                    case \"t\":\n                        return hours < 12 ? locale.shortAm : locale.shortPm;\n                    case \"tt\":\n                        return hours < 12 ? locale.am : locale.pm;\n                    case \"S\":\n                        return milliseconds;\n                    case \"SS\":\n                        return leftPad(milliseconds, 2);\n                    case \"SSS\":\n                        return leftPad(milliseconds, 3);\n                    default:\n                        return m;\n                }\n            }\n            );\n        },\n\n        parse: function(val, pattern) {\n            if (!val) {\n                return null;\n            }\n\n            if (Object.prototype.toString.call(val) === \"[object Date]\") {\n                // 如果val是日期，则返回。\n                return val;\n            }\n\n            if (Object.prototype.toString.call(val) !== \"[object String]\") {\n                // 如果val不是字符串，则退出。\n                return null;\n            }\n\n            let time;\n            if (\n            Object.prototype.toString.call(pattern) !== \"[object String]\" ||\n            pattern === \"\"\n            ) {\n                // 如果fmt不是字符串或者是空字符串。\n                // 使用浏览器内置的日期解析\n                time = Date.parse(val);\n                if (isNaN(time)) {\n                    return null;\n                }\n\n                return new Date(time);\n            }\n\n            let i,\n            token,\n            tmpVal;\n\n            const tokens = pattern.match(\n            /(\\\\)?(dd?|MM?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|SS?S?|.)/g\n            );\n\n            const dateObj = {\n                year: 0,\n                month: 1,\n                date: 0,\n                hours: 0,\n                minutes: 0,\n                seconds: 0,\n                millisecond: 0\n            };\n\n            for (i = 0; i < tokens.length; i++) {\n                token = tokens[i];\n                tmpVal = parseToken(token, val, dateObj);\n\n                if (tmpVal !== null) {\n                    if (val.length > tmpVal.length) {\n                        val = val.substring(tmpVal.length);\n                    } else {\n                        val = \"\";\n                    }\n                } else {\n                    val = val.substring(token.length);\n                }\n            }\n\n            if (dateObj.t) {\n                if (\n                DateUtils.locale.pm === dateObj.t ||\n                DateUtils.locale.shortPm === dateObj.t\n                ) {\n                    dateObj.hours = +dateObj.hours + 12;\n                }\n            }\n\n            dateObj.month -= 1;\n\n            return new Date(\n            dateObj.year,\n            dateObj.month,\n            dateObj.date,\n            dateObj.hours,\n            dateObj.minutes,\n            dateObj.seconds,\n            dateObj.millisecond\n            );\n        }\n    };\n\n})();\n\nexport default DateUtils;\n","const FloatPanelManagement = function (){\n\n    const panelMap = {\n        right: [],\n        left: [],\n    };\n\n    function setPanelSeq(panels, panelSeq, newPanel){\n\n        for(const panel of panels){\n            if(panel.id !== newPanel.id) {\n                panelSeq.push(panel);\n            }\n        }\n\n        for(let idx = 0, len = panelSeq.length; idx < len; idx++){\n            panelSeq[idx].style.zIndex = 9999 - idx;\n        }\n\n    }\n\n    function shown(position, panel){\n\n        const panels = panelMap[position];\n\n        const panelSeq = [ panel ];\n\n        setPanelSeq(panels, panelSeq, panel);\n\n        panelMap[position] = panelSeq;\n\n    }\n\n    function hidden(position, panel){\n\n        const panels = panelMap[position];\n\n        const panelSeq = [ ];\n\n        setPanelSeq(panels, panelSeq, panel);\n\n        panelMap[position] = panelSeq;\n\n    }\n\n    function register(controller, eventPrefix, position){\n\n        const shownEventName = `${eventPrefix}.shown`;\n        const hiddenEventName = `${eventPrefix}.hidden`;\n\n        controller.on(shownEventName, (panel) => shown(position, panel));\n\n        controller.on(hiddenEventName, (panel) => hidden(position, panel));\n\n    }\n\n    return {\n        register,\n    }\n\n}();\n\nexport default FloatPanelManagement;\n","import { IIIF_VIEWER_URL } from \"./constants.js\";\n\nconst IIIFViewer = function () {\n\n    function open(params){\n\n        window.open( IIIF_VIEWER_URL.interpolate(params).trim());\n    }\n\n    return {\n        open,\n    }\n\n}();\n\nexport default IIIFViewer;\n","\nimport { Toast } from \"./bootstrp-wrap\";\n\nconst Notification = function(){\n\n    let notification = null;\n\n    let notificationBody = null;\n\n    function create(){\n\n        const html =\n`<div class=\"toast hide bg-white\"\n      role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    <div class=\"toast-body\"></div>\n</div>`;\n\n        const div = document.createElement('div');\n\n        div.className = 'position-fixed';\n\n        div.style.cssText = \"z-index:9998;top:30px;left:43%;\"\n\n        div.innerHTML = html;\n\n        document.body.append(div);\n\n        notification = div.firstChild;\n\n        notificationBody = notification.querySelector('.toast-body')\n\n    }\n\n    function show(info, type, sec){\n\n        if(!notification){\n\n            create();\n\n        }\n\n        notificationBody.innerHTML = info;\n\n        notificationBody.className = `toast-body text-white bg-${ type || 'primary' }`;\n\n        const toast = Toast.getOrCreateInstance(notification);\n\n        toast.show();\n\n        window.setTimeout(() => { toast.hide(); }, (sec || 3) * 1000)\n\n    }\n\n    return {\n        show,\n    }\n\n}();\n\nexport default Notification;\n","import { EventEmitterClass } from \"./commons.js\";\n\nconst OpenStreetMapService = function () {\n\n    const localEventEmitter = new EventEmitterClass();\n\n    function addEventListener(obj, types, fn, context) {\n        localEventEmitter.on(obj, types, fn, context);\n    }\n\n    function getInfoByLatLng({callback, lat, lng, lang}) {\n\n        const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json&accept-language=${lang}`;\n\n        fetch(url)\n        .then(response => response.ok ? response : Promise.reject({err: response.status}))\n        .then(response => response.json())\n        .then(json => callback({placeInfo: json.display_name || 'unknown', lat, lng}))\n        .catch(error => {\n            console.error('Error:', error);\n            localEventEmitter.emit('exception', 'Cannot access openstreetmap service, please contact administrators');\n        });\n\n    }\n\n    function searchPlaceName(placeName, callback) {\n\n        if (placeName === \"\") {\n            return;\n        }\n\n        //TODO get user's current language\n        const url =\n        `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(placeName)}&format=json&polygon=1&addressdetails=1&accept-language=en`;\n\n        fetch(url)\n        .then(response => response.ok ? response : Promise.reject({err: response.status}))\n        .then(response => response.json())\n        .then(json => {\n\n            const data = [];\n\n            for (const element of json) {\n\n                const node = {lat: element.lat, lng: element.lon, info: ''};\n\n                node.info = JSON.stringify(element)\n                .replace(/{/g, \"\")\n                .replace(/}/g, \"\")\n                .replace(/\"/g, \"\")\n                .replace(/, ODbL 1.0. https:\\/\\/osm.org\\/copyright/g, \"\")\n                .replace(/,/g, \"<br/>\");\n\n                data.push(node);\n            }\n\n            callback(data);\n\n\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            localEventEmitter.emit('exception', 'Cannot access openstreetmap service, please contact administrators');\n        });\n    }\n\n    return {\n        getInfoByLatLng,\n        searchPlaceName,\n        on: addEventListener,\n    }\n\n    /* Events\n\n    { name: 'exception', params: String }\n\n    */\n}();\n\nexport default OpenStreetMapService;\n\n","const Spinner = function() {\n\n    let spinner = null;\n\n    function create(){\n\n        const html = `<span class=\"visually-hidden\">Loading...</span>`;\n\n        const div = document.createElement('div');\n\n        div.className = 'spinner-border';\n\n        div.style.cssText = \"z-index:9998;position:absolute;top:40%;left:50%;width:3rem;height:3rem;display:none;\";\n\n        div.innerHTML = html;\n\n        document.body.append(div);\n\n        spinner = div;\n\n    }\n\n    function show(){\n\n        if(!spinner){\n            create();\n        }\n\n        spinner.style.display = 'block';\n    }\n\n    function hide(){\n\n        if(spinner) {\n            spinner.style.display = 'none';\n        }\n    }\n\n    return {\n        show,\n        hide,\n    }\n}();\n\nexport default Spinner;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_bootstrap__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Spinner from \"./spinner\";\nimport Notification from \"./notification\";\nimport OpenStreetMapService from \"./openstreetmap-service\";\nimport IIIFViewer from \"./iiif-viewer\";\nimport DateUtils from \"./date-utils\";\nimport BasicDataProcessor from \"./data-processor\";\nimport FloatPanelManagement from \"./float-panel-management\";\nimport * as BootstrapWrap from \"./bootstrp-wrap\";\nimport * as Constants from \"./constants\";\nimport * as Commons from \"./commons\";\n\nexport {\n    Constants,\n    Commons,\n    Spinner,\n    Notification,\n    OpenStreetMapService,\n    IIIFViewer,\n    DateUtils,\n    BasicDataProcessor,\n    BootstrapWrap,\n    FloatPanelManagement,\n};\n"],"names":[],"sourceRoot":""}